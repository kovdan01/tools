"Oh, my God! thank God!" said Princess Mary. "I must go and meet him, he does not know Russian." Princess Mary threw a shawl over her head and ran to meet the newcomer. As she was crossing the anteroom she saw through the window a carriage with lanterns, standing at the entrance. She went out on the stairs. On a bani&ter post stood a tallow candle which gut- tered in the draft. On the landing below, Philip, the footman, stood looking scared and holding another candle. Still lower, beyond the turn of the staircase, one could hear the footstep of someone in thick felt boots, and a voice that seemed familiar to Princess Mary was saying something. "Thank God!" said the voice. "And Father?" "Gone to bed," replied the voice of Demydn the house steward, who was downstairs. Then the voice said something more, Dem- ydn replied, and the steps in the felt boots ap- proached the unseen bend of the staircase more rapidly. "It's Andrew!" thought Princess Mary. "No it can't be, that would be too extraordinary," and at the very moment she thought this, the face and figure of Prince Andrew, in a fur cloak the deep collar of which was covered with snow, appeared on the landing where the foot- 