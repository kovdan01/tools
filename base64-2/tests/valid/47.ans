"Yes," returned Nicholas. "You're not cold?" "No. I'm quite, quite all right. I feel so com- fortable!" answered Natdsha, almost perplexed by her feelings. They remained silent a long while. The night was dark and damp. They could not see the horses, but only heard them splashing through the unseen mud. What was passing in that receptive childlike soul that so eagerly caught and assimilated all the diverse impressions of life? How did they all find place in her? But she was very happy. As they were near ing home she suddenly struck up the air of As 'twas growing dark last night- the tune of which she had all the way been try- ing to get and had at last caught. "Got it?" said Nicholas. "What were you thinking about just now, Nicholas?" inquired Natdsha. They were fond of asking one another that question. "I?" said Nicholas, trying to remember. "Well, you see, first I thought that Rugdy, the red hound, was like Uncle, and that if he were a man he would always keep Uncle near him, if not for his riding, then for his manner. What a good fellow Uncle is! Don't you think so? ... Well, and you?" "I? Wait a bit, wait Yes, first I thought that we are driving along and imagining that we are going home, but that heaven knows where we are really going in the darkness, and that we shall arrive and suddenly find that we are not in Otrddnoe, but in Fairyland. And then I thought . . . No, nothing else." "I know, I expect you thought of him," said Nicholas, smiling as Natdsha knew by the sound of his voice. "No," said Natdsha, though she had in reali- ty been thinking about Prince Andrew at the same time as of the rest, and of how he would have liked "Uncle." "And then I was saying to myself all the way, 'How well Anfsya carried herself, how well!' " And Nicholas heard her spontaneous, happy, ringing laughter. "And do you know," she suddenly said, "I know that I shall never again be as happy and tranquil as I am now." "Rubbish, nonsense, humbug!" exclaimed Nicholas, and he thought: "How charming this Natdsha of mine is! I have no other friend like her and never shall have. Why should she marry? We might always drive about together!" "What a darling this Nicholas of mine is!" thought Natdsha. "Ah, there are still lights in the drawing- BOOK SEVEN 291 room!" she said, pointing to the windows of the house that gleamed invitingly in the moist velvety darkness of the night. CHAPTER VIII COUNT ILYA Rosi6v had resigned the position of Marshal of the Nobility because it involved him in too much expense, but still his affairs did not improve. Natasha and Nicholas often noticed their parents conferring together anx- iously and privately and heard suggestions of selling the fine ancestral Rost6v house and es- 