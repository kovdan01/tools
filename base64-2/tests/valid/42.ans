Prince Andrew smiled. "I don't want one." "A member without salary," repeated Arak- 240 WAR AND PEACE chev. "I have the honor . . . Ehl Call the next one! Who else is there?" he shouted, bowing to Prince Andrew. CHAPTER V WHILE WAITING for the announcement of his appointment to the committee Prince Andrew looked up his former acquaintances, particu- larly those he knew to be in power and whose aid he might need. In Petersburg he now ex- perienced the same feeling he had had on the eve of a battle, when troubled by anxious cu- riosity and irresistibly attracted to the ruling circles where the future, on which the fate of millions depended, was beingshaped. From the irritation of the older men, the curiosity of the uninitiated, the reserve of the initiated, the hurry and preoccupation of everyone, and the innumerable committees and commissions of whose existence he learned every day, he felt that now, in 1809, here in Petersburg a vast civil conflict was in preparation, the command- er in chief of which was a mysterious person he did not know, but who was supposed to be a man of genius Speranski. And this movement of reconstruction of which Prince Andrew had a vague idea, and Sperdnski its chief promoter, began to interest him so keenly that the ques- tion of the army regulations quickly receded to a secondary place in his consciousness. Prince Andrew was most favorably placed to secure a good reception in the highest and most diverse Petersburg circles of the day. The re- forming party cordially welcomed and courted him, in the first place because he was reputed to be clever and very well read, and secondly be- cause by liberating his serfs he had obtained the reputation of being a liberal. The party of the old and dissatisfied, who censured the in- novations, turned to him expecting his sympa- thy in their disapproval of the reforms, simply because he was the son of his father. The fem- inine society world welcomed him gladly, be- cause he was rich, distinguished, a good match, and almost a newcomer, with a halo of romance on account of his supposed death and the tragic loss of his wife. Besides this the general opin- ion of all who had known him previously was that he had greatly improved during these last five years, having softened and grown more manly, lost his former affectation, pride, and contemptuous irony, and acquired the serenity that comes with years. People talked about him, were interested in him, and wanted to meet him. The day after his interview with Count Ar- akch^ev, Prince Andrew spent the evening at Count Kochub^y's. He told the count of his interview with Sila Andre evich (Kochube*y spoke of Arakche*ev by that nickname with the same vague irony Prince Andrew had noticed in the Minister of War's anteroom). "Mon cher f even in this case you can't do without Michael Mikhdylovich Sperdnski. He manages everything. I'll speak to him. He has promised to come this evening." "What has Speranski to do with the army regulations?" asked Prince Andrew. Kochube*y shook his head smilingly, as if sur- 